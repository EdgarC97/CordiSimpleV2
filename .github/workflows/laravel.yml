name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Hacer checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configurar PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      # Paso 3: Instalar dependencias de Composer
      - name: Install Composer dependencies
        run: |
          curl -sS https://getcomposer.org/installer | php
          php composer.phar install --no-interaction --prefer-dist

      # Paso 4: Instalar dependencias de npm
      - name: Install NPM dependencies
        run: |
          curl -sL https://deb.nodesource.com/setup_16.x | bash -
          apt-get install -y nodejs
          npm install

      # Paso 5: Generar los activos con Vite
      - name: Build assets with Vite
        run: |
          npm run build  # Esto generará el archivo manifest.json en /public/build

      # Paso 6: Crear el archivo .env de pruebas con los secretos (si es necesario)
      - name: Set up .env file
        run: |
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "DB_CONNECTION=${{ secrets.DB_CONNECTION }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "APP_URL=${{ secrets.APP_URL }}" >> .env
          echo "APP_ENV=production" >> .env  # Cambiar a producción para despliegue

      # Paso 7: Ejecutar migraciones (si es necesario)
      - name: Run migrations
        run: |
          php artisan migrate --force

      # Paso 8: Configurar caché y rutas
      - name: Cache config and routes
        run: |
          php artisan config:cache
          php artisan route:cache
          php artisan optimize

      # Paso 9: Desplegar a Render (ya es automático)
      # Render maneja el despliegue automáticamente, así que no necesitas un paso extra para esto.
