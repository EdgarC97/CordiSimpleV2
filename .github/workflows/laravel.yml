name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Hacer checkout del cÃ³digo
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configurar PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      # Paso 3: Actualizar Composer
      - name: Upgrade Composer
        run: |
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          php composer-setup.php --version=2.6.5
          php -r "unlink('composer-setup.php');"
          sudo mv composer.phar /usr/local/bin/composer
          composer --version

      # Paso 4: Configurar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      # Paso 5: Instalar dependencias
      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Install NPM dependencies
        run: npm ci

      # Paso 6: Generar activos
      - name: Build assets
        run: npm run build

      # Paso 7: Crear archivo .env
      - name: Set up .env file
        run: |
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "DB_CONNECTION=${{ secrets.DB_CONNECTION }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "APP_URL=${{ secrets.APP_URL }}" >> .env
          echo "APP_ENV=production" >> .env

      # Paso 8: Desplegar a Hostinger
      - name: Deploy to Hostinger via SSH
        env:
          HOST: ${{ secrets.HOST }}
          PORT: ${{ secrets.PORT }}
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass
          
          sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no -p $PORT $USERNAME@$HOST << 'EOF'
          
          # Asegurar herramientas
          which git || sudo apt-get install -y git
          which composer || (curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer)
          
          # Preparar directorio
          mkdir -p $HOME/domains/koalacordisimple.jcomtec.com
          cd $HOME/domains/koalacordisimple.jcomtec.com

          # Clonar o actualizar repositorio
          if [ ! -d ".git" ]; then
            git clone https://github.com/EdgarC97/CordiSimpleV2.git .
          else
            git pull origin main
          fi

          # Instalar dependencias
          composer install --no-dev --optimize-autoloader
          
          # Configurar Node.js
          curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
          sudo apt-get install -y nodejs
          
          # Instalar y construir dependencias npm
          npm ci
          npm run build

          # Comandos de Laravel
          php artisan key:generate
          php artisan config:cache
          php artisan route:cache
          php artisan migrate --force

          # Ajustar permisos
          sudo chown -R www-data:www-data storage bootstrap/cache
          
          EOF